/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsul.forms;

import br.edu.ifsul.classes.Itemlocado;
import br.edu.ifsul.classes.Tblequipamento;
import br.edu.ifsul.classes.Tbllocacao;
import java.awt.EventQueue;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author José Henrique
 */
public class Formitemlocado extends JPanel {

    private Tbllocacao locacaoSelecionada;//cra um atribuo do tipo locaçao

    public Formitemlocado() {
        initComponents();
        if (!Beans.isDesignTime()) {
            // entityManager.getTransaction().begin();
        }
    }

    public void setLocacao(Tbllocacao locacaoSelecionada) {
        this.locacaoSelecionada = locacaoSelecionada;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("ProjetoLocatech_TI.2019PU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT i FROM Itemlocado i");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jComboBox1 = new javax.swing.JComboBox<>();
        queryeqp = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("select e from Tblequipamento e");
        listeqp = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : queryeqp.getResultList();
        queryloc = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("select l from Tbllocacao l");
        listloc = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : queryloc.getResultList();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        iteCodigoLabel = new javax.swing.JLabel();
        equCodigoLabel = new javax.swing.JLabel();
        locCodigoLabel = new javax.swing.JLabel();
        qtdeEquipamentoLabel = new javax.swing.JLabel();
        iteCodigoField = new javax.swing.JTextField();
        qtdeEquipamentoField = new javax.swing.JTextField();
        btnsalvar = new javax.swing.JButton();
        btnatualizar = new javax.swing.JButton();
        btnnovo = new javax.swing.JButton();
        btnremover = new javax.swing.JButton();
        cbxeqp = new javax.swing.JComboBox<>();
        jComboBoxloc = new javax.swing.JComboBox<>();

        FormListener formListener = new FormListener();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${iteCodigo}"));
        columnBinding.setColumnName("Código do Item");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${equCodigo}"));
        columnBinding.setColumnName("Equipamento / Marca");
        columnBinding.setColumnClass(br.edu.ifsul.classes.Tblequipamento.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${locCodigo}"));
        columnBinding.setColumnName("Locação / Nome do Cliente");
        columnBinding.setColumnClass(br.edu.ifsul.classes.Tbllocacao.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${qtdeEquipamento}"));
        columnBinding.setColumnName("Qtde. de Equipamento(s)");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);

        iteCodigoLabel.setText("Código");

        equCodigoLabel.setText(" Equipamento");

        locCodigoLabel.setText("Locação");

        qtdeEquipamentoLabel.setText("Qtde Equipamento");

        iteCodigoField.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.iteCodigo}"), iteCodigoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), iteCodigoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.qtdeEquipamento}"), qtdeEquipamentoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), qtdeEquipamentoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qtdeEquipamentoField.addFocusListener(formListener);
        qtdeEquipamentoField.addActionListener(formListener);
        qtdeEquipamentoField.addKeyListener(formListener);

        btnsalvar.setText("Salvar");
        btnsalvar.addActionListener(formListener);

        btnatualizar.setText("Atualizar");
        btnatualizar.addActionListener(formListener);

        btnnovo.setText("Novo");
        btnnovo.addActionListener(formListener);

        btnremover.setText("Remover");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btnremover, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnremover.addActionListener(formListener);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listeqp, cbxeqp);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.equCodigo}"), cbxeqp, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listloc, jComboBoxloc);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.locCodigo}"), jComboBoxloc, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnnovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnremover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnatualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnsalvar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(iteCodigoLabel)
                                    .addComponent(equCodigoLabel)
                                    .addComponent(locCodigoLabel)
                                    .addComponent(qtdeEquipamentoLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(iteCodigoField, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                    .addComponent(qtdeEquipamentoField, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                    .addComponent(cbxeqp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxloc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnatualizar, btnnovo, btnremover, btnsalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iteCodigoLabel)
                    .addComponent(iteCodigoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(equCodigoLabel)
                    .addComponent(cbxeqp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locCodigoLabel)
                    .addComponent(jComboBoxloc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(qtdeEquipamentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(qtdeEquipamentoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsalvar)
                    .addComponent(btnatualizar)
                    .addComponent(btnremover)
                    .addComponent(btnnovo))
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == qtdeEquipamentoField) {
                Formitemlocado.this.qtdeEquipamentoFieldActionPerformed(evt);
            }
            else if (evt.getSource() == btnsalvar) {
                Formitemlocado.this.btnsalvarActionPerformed(evt);
            }
            else if (evt.getSource() == btnatualizar) {
                Formitemlocado.this.btnatualizarActionPerformed(evt);
            }
            else if (evt.getSource() == btnnovo) {
                Formitemlocado.this.btnnovoActionPerformed(evt);
            }
            else if (evt.getSource() == btnremover) {
                Formitemlocado.this.btnremoverActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == qtdeEquipamentoField) {
                Formitemlocado.this.qtdeEquipamentoFieldFocusLost(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == qtdeEquipamentoField) {
                Formitemlocado.this.qtdeEquipamentoFieldKeyTyped(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("unchecked")
    private void btnatualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnatualizarActionPerformed

        //entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
        //entityManager.getTransaction().commit();
    }//GEN-LAST:event_btnatualizarActionPerformed

    private void btnremoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnremoverActionPerformed
        entityManager.getTransaction().begin();
        int[] selected = masterTable.getSelectedRows();
        List<br.edu.ifsul.classes.Itemlocado> toRemove = new ArrayList<br.edu.ifsul.classes.Itemlocado>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            br.edu.ifsul.classes.Itemlocado i = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(i);
            entityManager.remove(i);
        }
        list.removeAll(toRemove);

        entityManager.getTransaction().commit();
    }//GEN-LAST:event_btnremoverActionPerformed

    private void btnnovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnovoActionPerformed
        br.edu.ifsul.classes.Itemlocado i = new br.edu.ifsul.classes.Itemlocado();

        entityManager.persist(i);
        list.add(i);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_btnnovoActionPerformed

    private void btnsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalvarActionPerformed
        Boolean valid = true;
        if (cbxeqp.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, " Selecione um equipamento!");
            cbxeqp.requestFocus();
            valid = false;
            return;
        }
        if (jComboBoxloc.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, " Selecione uma locação!");
            jComboBoxloc.requestFocus();
            valid = false;
            return;
        }
        if (qtdeEquipamentoField.getText().length() <= 0) {
            JOptionPane.showMessageDialog(null, " Verifique a quantidade de equipamentos!");
            qtdeEquipamentoField.requestFocus();
            valid = false;
            return;
        }
        if (valid) {
            try {
                entityManager.getTransaction().begin();//inicia uma transação no banco
                List<br.edu.ifsul.classes.Itemlocado> merged = new ArrayList<br.edu.ifsul.classes.Itemlocado>(list.size());//cria uma lista da clase e pega o tamanho
                double valorTotal = 0;//varialvel para setar na locação
                int novoestoque = 0;//variavel para o novo estoque apos a baixa dos equipamentos
                Tbllocacao locacao = null;//novo objto classe locacao
                Tblequipamento equipamento = null;//obj classe equipamento
                for (br.edu.ifsul.classes.Itemlocado i : list) {// compara a lista com o que tem na classe

                    System.out.println("i.getEquCodigo().getEquCodigo(): " + i.getEquCodigo().getEquCodigo());
                    System.out.println("((Tblequipamento) cbxeqp.getSelectedItem()).getEquCodigo(): " + ((Tblequipamento) cbxeqp.getSelectedItem()).getEquCodigo());

                    if (i.getEquCodigo().getEquCodigo() == ((Tblequipamento) cbxeqp.getSelectedItem()).getEquCodigo()) {

                        if (i.getEquCodigo().getEstoque() >= Integer.parseInt(qtdeEquipamentoField.getText())) {

                            Itemlocado itemAlterado = entityManager.merge(i);
                            merged.add(itemAlterado);
                            valorTotal += itemAlterado.getQtdeEquipamento() * itemAlterado.getEquCodigo().getValor();

                            novoestoque = i.getEquCodigo().getEstoque() - Integer.parseInt(qtdeEquipamentoField.getText());

                            if (locacao == null) {
                                locacao = itemAlterado.getLocCodigo();
                            }

                            if (equipamento == null) {
                                equipamento = i.getEquCodigo();
                            }

                        } else {
                            JOptionPane.showMessageDialog(this, "Estoque para o equipamento " + i.getEquCodigo().getNome() + " : " + i.getEquCodigo().getEstoque(), "Estoque", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }

                }
                if (locacao != null) {
                    locacao.setValorTotal(valorTotal);
                    equipamento.setEstoque(novoestoque);

                    entityManager.persist(locacao);
                    entityManager.persist(equipamento);

                    list.clear();
                    list.addAll(merged);
                }
                
                entityManager.getTransaction().commit();
                

            } catch (RollbackException rex) {
                //rex.printStackTrace();
                JOptionPane.showMessageDialog(null, " O item já está referênciado em outra tabela!");

            }
        }
    }//GEN-LAST:event_btnsalvarActionPerformed

    private void qtdeEquipamentoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtdeEquipamentoFieldKeyTyped

    }//GEN-LAST:event_qtdeEquipamentoFieldKeyTyped

    private void qtdeEquipamentoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtdeEquipamentoFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_qtdeEquipamentoFieldActionPerformed

    private void qtdeEquipamentoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qtdeEquipamentoFieldFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_qtdeEquipamentoFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnatualizar;
    private javax.swing.JButton btnnovo;
    private javax.swing.JButton btnremover;
    private javax.swing.JButton btnsalvar;
    private javax.swing.JComboBox<String> cbxeqp;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel equCodigoLabel;
    private javax.swing.JTextField iteCodigoField;
    private javax.swing.JLabel iteCodigoLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBoxloc;
    private java.util.List<br.edu.ifsul.classes.Itemlocado> list;
    private java.util.List listeqp;
    private java.util.List listloc;
    private javax.swing.JLabel locCodigoLabel;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JTextField qtdeEquipamentoField;
    private javax.swing.JLabel qtdeEquipamentoLabel;
    private javax.persistence.Query query;
    private javax.persistence.Query queryeqp;
    private javax.persistence.Query queryloc;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formitemlocado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formitemlocado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formitemlocado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formitemlocado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame("Item Locado");
                frame.setContentPane(new Formitemlocado());
                frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

}
